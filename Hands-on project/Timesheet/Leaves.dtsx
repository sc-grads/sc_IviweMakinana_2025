<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/11/2025 10:31:15 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-66HI94H2"
  DTS:CreatorName="LAPTOP-66HI94H2\IviweMakinana"
  DTS:DTSID="{A29EB341-B851-4CD9-8091-A7EC11485AFE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="Leaves"
  DTS:PackageType="5"
  DTS:VersionBuild="35"
  DTS:VersionGUID="{0C8E9D34-7EE4-4108-AA01-09BF6ED188A4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{3DAC2D68-E85E-4D4F-875E-4D405420A785}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\IviweMakinana\Documents\Timesheet\Evashan\Evashan Govender April Final Week Timesheet.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{461B4FC7-6FBB-4159-8E74-FAD6DA34930E}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" +  @[User::FolderPath] + ";Extended Properties=\"Excel 12.0 Xml;HDR=NO\";"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FolderPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\IviweMakinana\Documents\Timesheet\Evashan\Evashan Govender April Final Week Timesheet.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{0E98C260-7439-4121-81E7-309C9C44764B}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\IviweMakinana\Documents\Timesheet\Siphenathi\Siphenathi Ndevu May Final.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5D51C04F-16AE-4692-A236-DEA90B7B42F6}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="7177"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\IviweMakinana\Downloads\NamesID.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Type of Leave"
              DTS:DTSID="{2E9E211C-F331-45F9-8E75-EE88E68755F9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Start Date"
              DTS:DTSID="{AF94EED3-00EB-4416-9A6E-3047038EFCFC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="End Date"
              DTS:DTSID="{9A318248-C6B6-4CF2-81D6-8031B21B5469}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="Number of days"
              DTS:DTSID="{FBB4FCBA-1147-461C-8FA2-DC38A0A860F2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Approval Obtained"
              DTS:DTSID="{A7A62FAA-3E61-4509-BDF4-AB51642C209D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Sick Note"
              DTS:DTSID="{24FF803D-0467-4C1E-9BF1-31FB5F733DAD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of Type of Leave"
              DTS:DTSID="{1763A324-F59A-484D-ACB3-161184FEB5C2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of Start Date"
              DTS:DTSID="{4FE812E3-90BB-4A60-A90C-01AB87DBCAE6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of End Date"
              DTS:DTSID="{7FD523C2-F78B-4140-B15D-D278D50087CB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of Number of days"
              DTS:DTSID="{1E1F9106-D14F-4DE3-805D-9B368C4129A8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of Approval Obtained"
              DTS:DTSID="{0BD58768-3069-4076-9EF9-ACB24E03B0C8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Copy of Sick Note"
              DTS:DTSID="{18692B0D-DAFF-4EF2-A017-FC7459FB5594}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DerivedColumn 1"
              DTS:DTSID="{F9F7DBB2-6207-4C60-B697-5E6F776246BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{9D482D13-4CCD-4CFC-9A06-A992BDB94D55}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ConsultantID"
              DTS:DTSID="{B90D13DE-F80C-493D-BA65-495B74F4492D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ConsultantName"
              DTS:DTSID="{2ED8929A-AD96-4808-84C2-3378E38B418A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="_Similarity"
              DTS:DTSID="{AC4FE263-7E64-472E-BB8E-B2205AAEBD30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="_Confidence"
              DTS:DTSID="{B0E5B963-D570-412E-8DB5-E45C6C891B32}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="_Similarity_DerivedColumn 1"
              DTS:DTSID="{CFA44EC4-4BE9-4A72-815A-684007973E85}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B4C0ED7A-E6D4-4A94-B295-68505A5E0543}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Leaves-{B4C0ED7A-E6D4-4A94-B295-68505A5E0543}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3DB9927-9830-4644-A3D8-7822C9D74002}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultentID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{376CA3D4-822F-4BE2-87BD-58CBC838D7D5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT( @[User::FolderPath] , LEN(@[User::FolderPath]) - FINDSTRING(REVERSE(@[User::FolderPath]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::FilePath], LEN(@[User::FolderPath]) - FINDSTRING(REVERSE(@[User::FolderPath]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8">Evashan</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7AEC141-450C-4EDE-AD88-A61CD2EB06D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\IviweMakinana\Documents\Timesheet\Evashan\Evashan Govender April Final Week Timesheet.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F170E82-1330-4119-866B-6EFEB4DFD903}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\IviweMakinana\Documents\Timesheet\Evashan\Evashan Govender April Final Week Timesheet.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{87678090-ecc8-40e9-8b72-a2af017594a1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Type of Leave]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Type of Leave"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Start Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of Start Date"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of End Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of End Date"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Case 1]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 1"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](@[User::ConsultentID])</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(@[User::ConsultentID])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Case 2]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 2"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL([Copy of Type of Leave])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Case 3]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 3"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL([Copy of Start Date])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Case 4]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 4"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL([Copy of End Date])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Type of Leave]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Type of Leave"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Start Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Start Date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="End Date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Number of days ]"
                      cachedDataType="r8"
                      cachedName="Number of days "
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Approval Obtained]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Approval Obtained"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Sick Note]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Sick Note"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                      name="Copy of Type of Leave"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                      name="Copy of Start Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                      name="Copy of End Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                      name="Copy of Number of days"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                      name="Copy of Approval Obtained"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                      name="Copy of Sick Note"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="100"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]"
                      name="DerivedColumn 1"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,100)@[User::EmployeeName]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,100)@[User::EmployeeName]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::ConsultentID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::ConsultentID]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Leave$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Leave$A10:F]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                      name="Type of Leave"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                      name="Start Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                      name="End Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                      name="Number of days "
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                      name="Approval Obtained"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                      name="Sick Note"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                      dataType="wstr"
                      length="255"
                      name="Type of Leave" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                      dataType="date"
                      name="Start Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                      dataType="date"
                      name="End Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                      dataType="r8"
                      name="Number of days " />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                      dataType="wstr"
                      length="255"
                      name="Approval Obtained" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                      dataType="wstr"
                      length="255"
                      name="Sick Note" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                      name="Type of Leave" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                      dataType="date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                      name="Start Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                      dataType="date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                      name="End Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                      name="Number of days " />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                      name="Approval Obtained" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                      name="Sick Note" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Fuzzy Lookup"
              componentClassID="Microsoft.FuzzyLookup"
              contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
              name="Fuzzy Lookup"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                  name="MatchIndexOptions"
                  typeConverter="tcMatchIndexOptions">1</property>
                <property
                  dataType="System.Null"
                  description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                  expressionType="Notify"
                  name="MaxMemoryUsage" />
                <property
                  dataType="System.Null"
                  description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                  name="MatchIndexName"
                  state="escaped" />
                <property
                  dataType="System.String"
                  description="Specifies the name of the reference table or view against which to match incoming records."
                  name="ReferenceTableName"
                  state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                  name="DropExistingMatchIndex">1</property>
                <property
                  dataType="System.Int32"
                  description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                  name="CopyReferenceTable">1</property>
                <property
                  dataType="System.UInt32"
                  description="Specifies the maximum number of fuzzy matches to return for an input record."
                  name="MaxOutputMatchesPerInput">1</property>
                <property
                  dataType="System.Single"
                  description="Specifies the minimum similarity score required for the match results that the transformation returns."
                  name="MinSimilarity">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                  name="Delimiters"
                  state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                <property
                  dataType="System.String"
                  description="Specifies the metadata of the reference table in XML format."
                  name="ReferenceMetadataXml"
                  state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_Email_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                <property
                  dataType="System.Boolean"
                  description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                  name="Exhaustive">false</property>
                <property
                  dataType="System.Boolean"
                  description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                  name="WarmCaches">true</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Fuzzy Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Fuzzy Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Type of Leave]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Type of Leave"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Start Date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="End Date"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Number of days ]"
                      cachedDataType="r8"
                      cachedName="Number of days "
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Approval Obtained]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Approval Obtained"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Sick Note]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Sick Note"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Type of Leave]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Type of Leave"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of Start Date"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of End Date"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Number of days]"
                      cachedDataType="i4"
                      cachedName="Copy of Number of days"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Approval Obtained]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Copy of Approval Obtained"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Sick Note]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Copy of Sick Note"
                      lineageId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[DerivedColumn 1]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="DerivedColumn 1"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped">ConsultantName</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                  name="Fuzzy Lookup Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                      name="Type of Leave">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                      name="Start Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                      name="End Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                      name="Number of days">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                      name="Approval Obtained">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                      name="Sick Note">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                      name="Copy of Type of Leave">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                      dataType="dbDate"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                      name="Copy of Start Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                      dataType="dbDate"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                      name="Copy of End Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                      name="Copy of Number of days">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                      name="Copy of Approval Obtained">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                      name="Copy of Sick Note">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[DerivedColumn 1]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[DerivedColumn 1]"
                      name="DerivedColumn 1">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]"
                      name="id">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                      name="ConsultantID">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">ConsultantID</property>
                        <property
                          containsID="true"
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                      name="ConsultantName">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">ConsultantName</property>
                        <property
                          containsID="true"
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      name="_Similarity">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      name="_Confidence">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_DerivedColumn 1]"
                      dataType="r4"
                      description="Column-level similarity score for fuzzy join on column &quot;DerivedColumn 1&quot;."
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_DerivedColumn 1]"
                      name="_Similarity_DerivedColumn 1">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">3</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[LeaveRecords]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Type of Leave]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Type of Leave"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of Start Date"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Date]"
                      cachedDataType="dbDate"
                      cachedName="Copy of End Date"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Number of days]"
                      cachedDataType="i4"
                      cachedName="Copy of Number of days"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Approval Obtained]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Copy of Approval Obtained"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Sick Note]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Copy of Sick Note"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                      lineageId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                      dataType="i4"
                      name="LeaveID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                      dataType="i4"
                      name="ConsultantID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                      dataType="wstr"
                      length="50"
                      name="LeaveType" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      dataType="wstr"
                      length="10"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                      dataType="wstr"
                      length="10"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                      dataType="numeric"
                      name="NumberOfDays"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                      dataType="bool"
                      name="ApprovalObtained" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                      dataType="bool"
                      name="SickNote" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressDuringLeave]"
                      dataType="wstr"
                      length="255"
                      name="AddressDuringLeave" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Conditional Split Default Output]"
              endId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Conditional Split Default Output"
              startId="Package\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Data Conversion Output]"
              endId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Derived Column Output]"
              endId="Package\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Excel Source Output]"
              endId="Package\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Fuzzy Lookup Output]"
              endId="Package\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
              name="Fuzzy Lookup Output"
              startId="Package\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EC9C083F-4050-4B82-AE51-43416CB3FC73}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{82846FCB-4515-4F28-90F1-6D04C1E740B0}"
        DTS:ObjectName="{82846FCB-4515-4F28-90F1-6D04C1E740B0}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\IviweMakinana\Documents\Timesheet\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{807D3539-218C-494F-BB67-9BA582746DB3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](@[User::ConsultentID])</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(@[User::ConsultentID])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 2]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 2"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of Type of Leave])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 3]"
                      description="Output 3 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 3"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of Start Date])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">2</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 4]"
                      description="Output 4 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 4"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of End Date])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">3</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          name="Copy of Type of Leave"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          name="Copy of End Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          name="Copy of Number of days"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          name="Copy of Approval Obtained"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          name="Copy of Sick Note"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]"
                          name="DerivedColumn 1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]"
                          name="id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ConsultentID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ConsultentID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Leave$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Leave$A10:F]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="date"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="date"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="r8"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="7177"
                  name="Flat File Destination"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Type of Leave]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Start Date]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[End Date]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Number of days]"
                          cachedDataType="r8"
                          cachedName="Number of days"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Number of days]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Approval Obtained]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Sick Note]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Type of Leave]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Start Date]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of End Date]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Number of days]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of Approval Obtained]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Approval Obtained]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Copy of Sick Note]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Sick Note"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Sick Note]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[DerivedColumn 1]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="DerivedColumn 1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[DerivedColumn 1]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[DerivedColumn 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[id]"
                          cachedDataType="i4"
                          cachedName="id"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[id]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ConsultantName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ConsultantName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[_Similarity]"
                          cachedDataType="r4"
                          cachedName="_Similarity"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Similarity]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[_Confidence]"
                          cachedDataType="r4"
                          cachedName="_Confidence"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Confidence]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[_Similarity_DerivedColumn 1]"
                          cachedDataType="r4"
                          cachedName="_Similarity_DerivedColumn 1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Similarity_DerivedColumn 1]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_DerivedColumn 1]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Start Date]"
                          dataType="wstr"
                          length="255"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[End Date]"
                          dataType="wstr"
                          length="255"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Number of days]"
                          dataType="r8"
                          name="Number of days" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Copy of Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Start Date]"
                          dataType="dbDate"
                          name="Copy of Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of End Date]"
                          dataType="dbDate"
                          name="Copy of End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Number of days]"
                          dataType="i4"
                          name="Copy of Number of days" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Approval Obtained]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Copy of Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Copy of Sick Note]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Copy of Sick Note" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[DerivedColumn 1]"
                          dataType="wstr"
                          length="100"
                          name="DerivedColumn 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ConsultantName]"
                          dataType="wstr"
                          length="100"
                          name="ConsultantName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Similarity]"
                          dataType="r4"
                          name="_Similarity" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Confidence]"
                          dataType="r4"
                          name="_Confidence" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[_Similarity_DerivedColumn 1]"
                          dataType="r4"
                          name="_Similarity_DerivedColumn 1" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="Fuzzy Lookup"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_Email_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Approval Obtained]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Sick Note]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[DerivedColumn 1]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="DerivedColumn 1"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[id]"
                          cachedDataType="i4"
                          cachedName="id"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          name="Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          name="Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          name="End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          name="Number of days">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          name="Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          name="Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                          name="Copy of Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                          name="Copy of End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                          name="Copy of Number of days">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                          name="Copy of Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                          name="Copy of Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[DerivedColumn 1]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[DerivedColumn 1]"
                          name="DerivedColumn 1">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[id]"
                          name="id">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[id]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_DerivedColumn 1]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;DerivedColumn 1&quot;."
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_DerivedColumn 1]"
                          name="_Similarity_DerivedColumn 1">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[DerivedColumn 1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[LeaveRecords]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Approval Obtained]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Sick Note]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Sick Note"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          dataType="wstr"
                          length="50"
                          name="LeaveType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="wstr"
                          length="10"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="wstr"
                          length="10"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="bool"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          dataType="bool"
                          name="SickNote" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressDuringLeave]"
                          dataType="wstr"
                          length="255"
                          name="AddressDuringLeave" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Default Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Conditional Split Default Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Error Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="Conditional Split Error Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Fuzzy Lookup Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{FD559489-8296-403E-B122-C844DAB4F3C4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FolderPath">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8f0687c9ce24c8586b4fa1d8dc0e22e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_e8f0687c9ce24c8586b4fa1d8dc0e22e")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e8f0687c9ce24c8586b4fa1d8dc0e22e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["User::FolderPath"].Value.ToString());
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BA02972-26DD-438B-94CA-0B2B13A67FB0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e8f0687c9ce24c8586b4fa1d8dc0e22e</RootNamespace>
    <AssemblyName>ST_e8f0687c9ce24c8586b4fa1d8dc0e22e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e8f0687c9ce24c8586b4fa1d8dc0e22e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e8f0687c9ce24c8586b4fa1d8dc0e22e</msb:DisplayName>
    <msb:ProjectId>{31BB30AD-60F7-4849-8BDE-72E0454C4A5E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Settings.get_Default():ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Sett" +
    "ings")]

namespace ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e8f0687c9ce24c8586b4fa1d8dc0e22e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIGLSWgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA5i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
LQAAAAAAAEgAAAACAAUA7CAAAPALAAABAAAAAAAAANwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnIjAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAmAAAACNVUwBwCgAAEAAAACNHVUlEAAAAgAoAAHABAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0AkUEBgBx
ATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMDBgDQAeIC
CgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAM
AckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsAFgB1BQ4FFgBUBQ4FBgC7AKYDBgB3AKYDBgCEBfMD
AAAAAAEAAAAAAAEAAQABABAAvgM6ADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEA4ABsABEAXgBwAAYGKQB0AFaAIwV3AFaAwAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwjI
AIAAAQDGIAAAAACTCNQAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEA0gIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAiQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwADAS4AQwDUAC4ASwALAS4AUwD9AC4AWwAkAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADoAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AABNJFBwAAAAAAAAOgAAAAQAAAAAAAAAAAAAAEwAMQAAAAAAEAAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAABAAAAAAAAAAAAAAAFUACgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfZThmMDY4N2M5Y2UyNGM4NTg2YjRmYTFkOGRjMGUyMmUA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lOGYw
Njg3YzljZTI0Yzg1ODZiNGZhMWQ4ZGMwZTIyZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U4ZjA2ODdjOWNlMjRjODU4NmI0ZmExZDhkYzBlMjJl
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9lOGYwNjg3
YzljZTI0Yzg1ODZiNGZhMWQ4ZGMwZTIyZS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAAhVQBzAGUAcgA6ADoARgBvAGwAZABlAHIAUABhAHQAaAAAcVMA
VABfAGUAOABmADAANgA4ADcAYwA5AGMAZQAyADQAYwA4ADUAOAA2AGIANABmAGEAMQBkADgAZABj
ADAAZQAyADIAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
2/y/572t0UqwHipIKRHbOAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQgABJhBCAAEmUFIAES
aRwDIAAcAyAADgUAARFxDgYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQI
ABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUX2U4ZjA2ODdjOWNlMjRjODU4NmI0ZmExZDhkYzBlMjJlAAAFAQAAAAAHAQACSFAAABgB
ABNDb3B5cmlnaHQgQCBIUCAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALwt
AAAAAAAAAAAAANYtAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADILQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAiBAAAAAAAAAAAAAAiBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUHBNJAAAAQBQcE0kPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEggMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAXgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8AZQA4AGYAMAA2ADgANwBjADkAYwBlADIANABjADgANQA4ADYAYgA0AGYA
YQAxAGQAOABkAGMAMABlADIAMgBlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADkAMgA5ADMALgAyADgANwA1ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8AZQA4AGYAMAA2ADgANwBjADkAYwBlADIANABjADgANQA4ADYAYgA0AGYAYQAx
AGQAOABkAGMAMABlADIAMgBlAC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQA4AGYAMAA2ADgANwBjADkAYwBlADIANABjADgANQA4
ADYAYgA0AGYAYQAxAGQAOABkAGMAMABlADIAMgBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAOABmADAANgA4ADcAYwA5AGMAZQAyADQAYwA4ADUAOAA2
AGIANABmAGEAMQBkADgAZABjADAAZQAyADIAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQAyADkAMwAuADIAOAA3ADUAMgAAAAAARgAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADkAMwAuADIAOAA3ADUAMgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA6D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F49E0CDA-D7D3-4F90-8277-0DFB38DCCAE4}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Data Flow Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3D082C92-492E-4B42-A19C-8E1AA817E4A3}"
          DTS:ObjectName="{3D082C92-492E-4B42-A19C-8E1AA817E4A3}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FolderPath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="27.9999987706543,91.8666651599938" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="38.6999755496791,21.6666656481558" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="103.549987160167,63.2666656481558">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.599999511838"
              Start="0,0"
              End="0,21.099999511838">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.099999511838" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.8,212"
          Size="204.8,255.2"
          Id="Package\Foreach Loop Container"
          TopLeft="409.166644310787,81.4666661001577" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task"
          TopLeft="662.499963802598,158.599998897115" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Excel Source"
          TopLeft="315.833316076962,52.8666662990385" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Data Conversion"
          TopLeft="309.999983062348,138.666665702396" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
          TopLeft="343.333314574428,295.533331278231" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column"
          TopLeft="325.833315530586,201.066665268474" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="386.916649569655,94.4666662990385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1999994033575"
              Start="0,0"
              End="0,36.6999994033575">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6999994033575" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
          TopLeft="394.16664513035,388.199997450709" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup"
          TopLeft="109.166660702063,265.799998535514" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="402.233315530586,242.666665268474">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-221.466654828523,23.1333332670397"
              Start="0,0"
              End="-221.466654828523,15.6333332670397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.56666663351986" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.56666663351986"
                    Point2="0,11.5666666335199"
                    Point3="-4,11.5666666335199" />
                  <mssgle:LineSegment
                    End="-217.466654828523,11.5666666335199" />
                  <mssgle:CubicBezierSegment
                    Point1="-217.466654828523,11.5666666335199"
                    Point2="-221.466654828523,11.5666666335199"
                    Point3="-221.466654828523,15.5666666335199" />
                  <mssgle:LineSegment
                    End="-221.466654828523,15.6333332670397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="309.999983062348,159.466665702396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.8333324682383,62.3999995660782"
              Start="0,0"
              End="8.33333246823832,62.3999995660782">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,58.3999995660782" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,58.3999995660782"
                    Point2="-22.5,62.3999995660782"
                    Point3="-18.5,62.3999995660782" />
                  <mssgle:LineSegment
                    End="8.33333246823832,62.3999995660782" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Fuzzy Lookup Output]"
          TopLeft="252.366660702063,286.599998535514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.9666538723644,29.7333327427175"
              Start="0,0"
              End="83.4666538723644,29.7333327427175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.4833269361822,0" />
                  <mssgle:CubicBezierSegment
                    Point1="41.4833269361822,0"
                    Point2="45.4833269361822,0"
                    Point3="45.4833269361822,4" />
                  <mssgle:LineSegment
                    End="45.4833269361822,25.7333327427175" />
                  <mssgle:CubicBezierSegment
                    Point1="45.4833269361822,25.7333327427175"
                    Point2="45.4833269361822,29.7333327427175"
                    Point3="49.4833269361822,29.7333327427175" />
                  <mssgle:LineSegment
                    End="83.4666538723644,29.7333327427175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
          TopLeft="617.499966261289,339.333331440952" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Default Output]"
          TopLeft="420.133314574428,337.133331278231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.6333305559227,51.0666661724779"
              Start="0,0"
              End="59.6333305559227,43.5666661724779">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.533333086239" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.533333086239"
                    Point2="0,25.533333086239"
                    Point3="4,25.533333086239" />
                  <mssgle:LineSegment
                    End="55.6333305559227,25.533333086239" />
                  <mssgle:CubicBezierSegment
                    Point1="55.6333305559227,25.533333086239"
                    Point2="59.6333305559227,25.533333086239"
                    Point3="59.6333305559227,29.533333086239" />
                  <mssgle:LineSegment
                    End="59.6333305559227,43.5666661724779" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.7972409720387,30.533333086239,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Error Output]"
          TopLeft="496.933314574428,316.333331278231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.566651686862,43.8000001627207"
              Start="0,0"
              End="113.066651686862,43.8000001627207">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="56.2833258434308,0" />
                  <mssgle:CubicBezierSegment
                    Point1="56.2833258434308,0"
                    Point2="60.2833258434308,0"
                    Point3="60.2833258434308,4" />
                  <mssgle:LineSegment
                    End="60.2833258434308,39.8000001627207" />
                  <mssgle:CubicBezierSegment
                    Point1="60.2833258434308,39.8000001627207"
                    Point2="60.2833258434308,43.8000001627207"
                    Point3="64.2833258434308,43.8000001627207" />
                  <mssgle:LineSegment
                    End="113.066651686862,43.8000001627207" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.41058040656924,-17.609375,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,41.6"
          Id="Package\Data Flow Task\Data Conversion"
          TopLeft="309.999983062348,138.666665702396" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Data Flow Task\Derived Column"
          TopLeft="325.833315530586,201.066665268474" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Data Flow Task\Fuzzy Lookup"
          TopLeft="109.166660702063,265.799998535514" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Data Flow Task\Conditional Split"
          TopLeft="343.333314574428,295.533331278231" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Data Flow Task\Excel Source"
          TopLeft="315.833316076962,52.8666662990385" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task\OLE DB Destination"
          TopLeft="344.999981150032,378.66666418367" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Conditional Split Default Output]"
          TopLeft="420.133314574428,337.133331278231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.4666665756041,41.5333329054383"
              Start="0,0"
              End="10.4666665756041,34.0333329054383">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7666664527192" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7666664527192"
                    Point2="0,20.7666664527192"
                    Point3="4,20.7666664527192" />
                  <mssgle:LineSegment
                    End="6.46666657560411,20.7666664527192" />
                  <mssgle:CubicBezierSegment
                    Point1="6.46666657560411,20.7666664527192"
                    Point2="10.4666665756041,20.7666664527192"
                    Point3="10.4666665756041,24.7666664527192" />
                  <mssgle:LineSegment
                    End="10.4666665756041,34.0333329054383" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-65.380572962198,25.7666664527192,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Fuzzy Lookup Output]"
          TopLeft="252.366660702063,286.599998535514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.9666538723644,29.7333327427175"
              Start="0,0"
              End="83.4666538723644,29.7333327427175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.4833269361822,0" />
                  <mssgle:CubicBezierSegment
                    Point1="41.4833269361822,0"
                    Point2="45.4833269361822,0"
                    Point3="45.4833269361822,4" />
                  <mssgle:LineSegment
                    End="45.4833269361822,25.7333327427175" />
                  <mssgle:CubicBezierSegment
                    Point1="45.4833269361822,25.7333327427175"
                    Point2="45.4833269361822,29.7333327427175"
                    Point3="49.4833269361822,29.7333327427175" />
                  <mssgle:LineSegment
                    End="83.4666538723644,29.7333327427175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="386.916649569655,94.4666662990385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1999994033575"
              Start="0,0"
              End="0,36.6999994033575">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6999994033575" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="402.233315530586,242.666665268474">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-221.466654828523,23.1333332670397"
              Start="0,0"
              End="-221.466654828523,15.6333332670397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.56666663351986" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.56666663351986"
                    Point2="0,11.5666666335199"
                    Point3="-4,11.5666666335199" />
                  <mssgle:LineSegment
                    End="-217.466654828523,11.5666666335199" />
                  <mssgle:CubicBezierSegment
                    Point1="-217.466654828523,11.5666666335199"
                    Point2="-221.466654828523,11.5666666335199"
                    Point3="-221.466654828523,15.5666666335199" />
                  <mssgle:LineSegment
                    End="-221.466654828523,15.6333332670397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="309.999983062348,159.466665702396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.8333324682383,62.3999995660782"
              Start="0,0"
              End="8.33333246823832,62.3999995660782">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,58.3999995660782" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,58.3999995660782"
                    Point2="-22.5,62.3999995660782"
                    Point3="-18.5,62.3999995660782" />
                  <mssgle:LineSegment
                    End="8.33333246823832,62.3999995660782" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>